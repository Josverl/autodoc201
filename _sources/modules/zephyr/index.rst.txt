zephyr -- Functionality specific to Zephyr.
===========================================
.. This document was autogenerated by Sphinx-autoapi from a .pyi stub or a source code file.
.. Do not edit this file, instead edit the source file and run Sphinx to update. 
.. Source: docs/stubs/zephyr/__init__.pyi

.. py:module:: zephyr

.. autoapi-nested-parse::

   Functionality specific to Zephyr.

   The ``zephyr`` module contains functions and classes specific to the Zephyr port.



Functions
---------

.. autoapisummary::

   zephyr.current_tid
   zephyr.is_preempt_thread
   zephyr.shell_exec
   zephyr.thread_analyze


Module Contents
---------------

.. py:function:: current_tid() -> _typeshed.Incomplete

   Returns the thread id of the current thread, which is used to reference the thread.


.. py:function:: is_preempt_thread() -> _typeshed.Incomplete

   Returns true if the current thread is a preemptible thread.

   Zephyr preemptible threads are those with non-negative priority values (low priority levels), which therefore,
   can be supplanted as soon as a higher or equal priority thread becomes ready.


.. py:function:: shell_exec(cmd_in) -> _typeshed.Incomplete

   Executes the given command on an UART backend. This function can only be accessed if ``CONFIG_SHELL_BACKEND_SERIAL``
   is configured for the port in ``zephyr/prj.conf``.

   A list of possible commands can be found in the documentation for Zephyr `shell commands <https://docs.zephyrproject.org/latest/reference/shell/index.html?highlight=shell_execute_cmd#commands>`_.


.. py:function:: thread_analyze() -> _typeshed.Incomplete

   Runs the Zephyr debug thread analyzer on the current thread and prints stack size statistics in the format:

    "``thread_name``-20s: STACK: unused ``available_stack_space`` usage ``stack_space_used``
    / ``stack_size`` (``percent_stack_space_used`` %); CPU: ``cpu_utilization`` %"

    * *CPU utilization is only printed if runtime statistics are configured via the ``CONFIG_THREAD_RUNTIME_STATS`` kconfig*

   This function can only be accessed if ``CONFIG_THREAD_ANALYZER`` is configured for the port in ``zephyr/prj.conf``.
   For more information, see documentation for Zephyr `thread analyzer
   <https://docs.zephyrproject.org/latest/guides/debug_tools/thread-analyzer.html#thread-analyzer>`_.


.. moved block submodules to the end of the file.

Submodules
----------

.. toctree::
   :maxdepth: 1

   /modules/zephyr/DiskAccess/index
   /modules/zephyr/FlashArea/index
   /modules/zephyr/zsensor/index



